name: DevSecOps Analyzer CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-python:
    name: Python Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8 on app/
        run: flake8 app/ --exit-zero --count --select=E9,F63,F7,F82 --show-source --statistics

  scan-gitleaks:
    name: Gitleaks Repo Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Gitleaks (no license required - fallback mode)
        run: |
          curl -sL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          ./gitleaks detect --source . --no-banner

  build-and-scan-image:
    name: Docker Build + Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t devsecops-analyzer .

      - name: Run Trivy Image Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./trivy image --severity HIGH,CRITICAL devsecops-analyzer

  test-api-endpoints:
    name: Health Check and Swagger Ping
    runs-on: ubuntu-latest
    needs: build-and-scan-image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Container
        run: |
          docker run -d -p 5000:5000 --name analyzer devsecops-analyzer
          sleep 10

      - name: Curl /healthz
        run: |
          curl -s http://localhost:5000/healthz | grep '"status": "ok"'

      - name: Curl /apidocs
        run: |
          curl -s http://localhost:5000/apidocs | grep '<title>'
