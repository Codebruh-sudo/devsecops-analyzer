name: DevSecOps Analyzer CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-python:
    name: Python linting with flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        run: flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics

  scan-gitleaks:
    name: Scan repo with Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml

  build-and-scan-image:
    name: Build Docker image & scan with Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: docker build -t devsecops-analyzer .

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.15.0
        with:
          image-ref: devsecops-analyzer
          format: table
          severity: HIGH,CRITICAL
          scan-type: image

  test-api-endpoints:
    name: Start container & test API routes
    runs-on: ubuntu-latest
    needs: build-and-scan-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run container
        run: |
          docker run -d -p 5000:5000 --name analyzer devsecops-analyzer
          sleep 5

      - name: Test /healthz
        run: |
          curl -s http://localhost:5000/healthz | grep '"status": "ok"'

      - name: Test /apidocs
        run: |
          curl -s http://localhost:5000/apidocs | grep '<title>'
